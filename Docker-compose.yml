version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: agridetect_postgres
    environment:
      POSTGRES_USER: agridetect_user
      POSTGRES_PASSWORD: agridetect_dev_password_123
      POSTGRES_DB: agridetect_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agridetect_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - agridetect_network

  redis:
    image: redis:7-alpine
    container_name: agridetect_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - agridetect_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agridetect_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@agridetect.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - agridetect_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  agridetect_network:
    driver: bridge
